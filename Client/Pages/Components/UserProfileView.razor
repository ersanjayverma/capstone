@using ZTACS.Shared.Entities
@using System.Text
@using MudBlazor
@inject IDialogService DialogService
@inject ISnackbar Snackbar
@inject HttpClient Http

@if (User is null)
{
    <MudText Color="Color.Error">User profile is not available.</MudText>
}
else
{
    <MudPaper Class="pa-6 mx-auto mt-6" Elevation="4" Style="max-width: 900px;">
        <MudStack Row Justify="Justify.FlexEnd" Class="mb-2">
            <MudButton StartIcon="@Icons.Material.Filled.Edit"
                       Variant="Variant.Filled"
                       Color="Color.Primary"
                       OnClick="@OpenEditDialog">
                Edit Profile
            </MudButton>
        </MudStack>

        <MudGrid>
            <!-- Avatar & Basic Info -->
            <MudItem xs="12" sm="4" Class="text-center">
                <img src="@User.ProfileImage" alt="Profile Image"
                     style="max-width: 128px; max-height: 128px; border-radius: 50%;"/>
                <MudText Typo="Typo.h6">@User.UserName</MudText>
                <MudText Typo="Typo.subtitle2" Color="Color.Secondary">@User.Email</MudText>

                @if (!string.IsNullOrEmpty(User.Roles))
                {
                    <MudChip T="string" Color="Color.Primary" Variant="Variant.Outlined" Class="mt-2">
                        @User.Roles
                    </MudChip>
                }
            </MudItem>

            <!-- Identity Info -->
            <MudItem xs="12" sm="8">
                <MudText Typo="Typo.h6" Class="mb-2">Identity Info</MudText>
                <MudList T="object" Dense="true">
                    <MudListItem T="object">
                        <b>Full Name:</b> @User.FullName
                    </MudListItem>
                    <MudListItem T="object">
                        <b>First Name:</b> @User.FirstName
                    </MudListItem>
                    <MudListItem T="object">
                        <b>Last Name:</b> @User.LastName
                    </MudListItem>
                    <MudListItem T="object">
                        <b>Locale:</b> @User.Locale
                    </MudListItem>
                    <MudListItem T="object">
                        <b>Last Login:</b> @User.LastLogin.ToLocalTime().ToString("f")
                    </MudListItem>
                </MudList>
            </MudItem>

            <!-- Threat Metadata -->
            <MudItem xs="12">
                <MudDivider Class="my-4"/>
                <MudText Typo="Typo.h6" Class="mb-2">Threat Intelligence</MudText>
                <MudList T="object" Dense="true">
                    <MudListItem T="object">
                        <b>IP Address:</b> @User.LastIp
                    </MudListItem>
                    <MudListItem T="object">
                        <b>City:</b> @User.LastCity
                    </MudListItem>
                    <MudListItem T="object">
                        <b>Region:</b> @User.LastRegion
                    </MudListItem>
                    <MudListItem T="object">
                        <b>Country:</b> @User.LastCountry
                    </MudListItem>
                    <MudListItem T="object">
                        <b>ISP:</b> @User.LastISP
                    </MudListItem>
                    <MudListItem T="object">
                        <b>ASN:</b> @User.LastASN
                    </MudListItem>
                    <MudListItem T="object">
                        <b>Device:</b> @User.LastDevice
                    </MudListItem>
                    <MudListItem T="object">
                        <b>Endpoint:</b> @User.LastEndpoint
                    </MudListItem>
                    <MudListItem T="object">
                        <b>Status:</b> @User.LastStatus
                    </MudListItem>
                    <MudListItem T="object">
                        <b>Threat Score:</b> @(User.LastScore?.ToString("F2") ?? "N/A")
                    </MudListItem>
                    <MudListItem T="object">
                        <b>Reason:</b> @User.LastReason
                    </MudListItem>
                </MudList>

                <MudStack Row Spacing="1" Class="mt-2">
                    @if (User.IsWhitelisted)
                    {
                        <MudChip T="string" Color="Color.Success" Variant="Variant.Filled">Whitelisted</MudChip>
                    }
                    @if (User.IsBlocked)
                    {
                        <MudChip T="string" Color="Color.Error" Variant="Variant.Filled">Blocked</MudChip>
                    }
                </MudStack>
            </MudItem>
        </MudGrid>
    </MudPaper>
}

@code {
    [Parameter] public UserProfile User { get; set; }

    private string? ProfileImageUrl =>
        User.ProfileImage != null
            ? User.ProfileImage
            : "https://via.placeholder.com/150";

    private async Task OpenEditDialog()
    {
        var parameters = new DialogParameters { ["User"] = User };
        var dialog = DialogService.Show<EditUserProfileDialog>("Edit Profile", parameters);

        var result = await dialog.Result;
        if (!result.Canceled && result.Data is UserProfile)
        {
            User = (UserProfile)result.Data;

            // Optionally refresh UI or fetch again from backend
            StateHasChanged();
        }
    }

}